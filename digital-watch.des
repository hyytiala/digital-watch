INITIALIZER:
    from Tkinter import *
    from DWatchGUI import DWatchGUI

    root = Tk()
    root.title("A Title")
    g = DWatchGUI(root, eventhandler)

    eventhandler.start()

    root.mainloop()
    exit()

STATECHART:
    A [DS] 
     CLOCK [DS] # Clock loop
    B [DS]
     TURN_LIGHT_ON # Command to turn the light on
     LIGHT_OFF [DS] # Initial state where the light is off
     LIGHT_ON # State where the light is on
     TURN_LIGHT_OFF
    C [DS]
     TIME_MODE [DS]
     CHRONO_MODE
    REFRESH_CHRONO [DS]
     LOOP [DS]
    REFRESH_TIME [DS]
     LOOP [DS]
    D [DS]
     ALARM_OFF [DS]
     ALARM_ON

# Clock loop

TRANSITION:
    S: A.CLOCK
    N: A.CLOCK
    T: 1
    O: g.increaseTimeByOne()

# Light switch

TRANSITION:
   S: B.LIGHT_OFF
   N: B.TURN_LIGHT_ON
   E: lightOn
   O: print "set light on"
      g.setIndiglo()

TRANSITION:
   S: B.TURN_LIGHT_ON
   N: B.LIGHT_ON
   T: 0.1
   O: print "light is on"

TRANSITION:
   S: B.LIGHT_ON
   N: B.TURN_LIGHT_OFF
   E: lightOff
   O: print "turning light off"

TRANSITION:
    S: B.TURN_LIGHT_OFF
    N: B.LIGHT_OFF
    T: 2 [OTT]
    O: print "light off"
       g.unsetIndiglo()

# Chrono toggle

TRANSITION:
   S: C.TIME_MODE
   N: C.CHRONO_MODE
   E: changeMode
   O: print "set chrono mode"

TRANSITION:
   S: C.CHRONO_MODE
   N: C.TIME_MODE
   E: changeMode
   O: print "set time mode"

# Display update

TRANSITION:
    S: REFRESH_TIME.LOOP
    N: REFRESH_TIME.LOOP
    T: 0.01
    C: [INSTATE("C.TIME_MODE")]
    O: g.refreshTimeDisplay()

TRANSITION:
    S: REFRESH_CHRONO.LOOP
    N: REFRESH_CHRONO.LOOP
    T: 0.01
    C: [INSTATE("C.CHRONO_MODE")]
    O: g.refreshChronoDisplay()

# Alarm on/off

TRANSITION:
   S: D.ALARM_OFF
   N: D.ALARM_ON
   E: setAlarm
   O: print "set alarm on"
      g.setAlarm()

TRANSITION:
   S: D.ALARM_ON
   N: D.ALARM_OFF
   E: setAlarm
   O: print "set alarm off"
      g.setAlarm()